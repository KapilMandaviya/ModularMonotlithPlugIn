@using UserContract
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Mvc.Rendering
@model DynamicFormModel
@{
	ViewData["Title"] = "Dynamic Form";
}

<h2 class="text-center my-4">@Model.FormName</h2>

<form method="post" action="saveDynamicformData" class="needs-validation" novalidate>
	<input type="hidden" name="FormName" value="@Model.FormName" />
	<input type="hidden" name="TableName" value="@Model.TableName" />
	<input type="hidden" name="FormId" value="@Model.Id" />

	<div class="container">
		<div class="row">
			@foreach (var field in Model.Fields)
			{
				<div class="row mb-2">
					<div class="col-md-6">
						<div class="form-group">
							<label class="form-label fw-bold mb-0">@field.Label</label>

							@if (field.FieldType == "DropDown")
							{
								var json = TempData[$"Options_" + field.FieldName]?.ToString();
								var options = JsonConvert.DeserializeObject<List<SelectListItem>>(json ?? "[]");

								<select name="@field.FieldName" class="form-select" required="@(field.Required)">
									<option value="">-- Please select --</option>
									@foreach (var opt in options)
									{
										<option value="@opt.Value">@opt.Text</option>
									}
								</select>
							}
							else if (field.FieldType == "RadioButton")
							{
								var options = field.OptionsJson?.Split(',') ?? new string[0];
								foreach (var opt in options)
								{
									var trimmed = opt.Trim();
									var inputId = $"{field.FieldName}_{trimmed}";
									<div class="form-check">
										<input type="radio" value="@opt" name="@field.FieldName" class="form-check-input" required="@(field.Required)" id="@inputId" />
										<label class="form-check-label" for="@inputId">@trimmed</label>
									</div>
								}
							}
							else if (field.FieldType == "CheckBox")
							{
								var options = field.OptionsJson?.Split(',') ?? new string[0];
								foreach (var opt in options)
								{
									var trimmed = opt.Trim();
									var inputId = $"{field.FieldName}_{trimmed}";
									<div class="form-check">
										<input type="checkbox" value="@opt" name="@field.FieldName" class="form-check-input" required="@(field.Required)" id="@inputId" />
										<label class="form-check-label" for="@inputId">@trimmed</label>
									</div>
								}
							}
							else if (field.FieldType == "TextArea")
							{
								<textarea class="form-control" name="@field.FieldName" id="@field.FieldName" title="@field.Tooltip" rows="3" required="@(field.Required)"></textarea>
							}
							else if (field.FieldType == "DatePicker")
							{
								<input type="date" name="@field.FieldName" class="form-control" title="@field.Tooltip" required="@(field.Required)" />
							}
							else
							{
								<input type="@field.FieldType" name="@field.FieldName" class="form-control" title="@field.Tooltip" required="@(field.Required)" />
							}
						</div>
					</div>
				</div>
			}
		</div>

		<div class="row mt-4">
			<div class="col-md-6 d-flex gap-2">
				<button type="submit" class="btn btn-primary w-100">
					<i class="bi bi-send-fill me-1"></i> Submit
				</button>
				<button type="reset" class="btn btn-secondary w-100">
					<i class="bi bi-x-circle me-1"></i> Cancel
				</button>
			</div>
		</div>
	</div>
</form>
<h4 class="mt-5">@Model.FormName List</h4>
<table class="table table-bordered table-striped   nowrap" id="dynamicTable" style="width:100%">
	<thead></thead>
	<tbody></tbody>
</table>
@section Styles {
	<!-- DataTables Bootstrap 5 & Responsive CSS -->
	<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
	<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css" />
	<!-- Font Awesome (optional for icons) -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
}

@section Scripts {
	<script>
		$(function () {
		@if (TempData["ToastrSuccess"] != null)
		{
			<text>toastr.success("@TempData["ToastrSuccess"]");</text>
		}
		@if (TempData["ToastrError"] != null)
		{
			<text>toastr.error("@TempData["ToastrError"]");</text>
		}
		});

				$(document).ready(function () {
			const tableName = '@Model.TableName';
			$.ajax({
				url: '/Home/GetFormData',
				type: 'GET',
				data: { tableName: tableName },
				success: function (response) {
					if (!response.columns || !response.rows) {
						$('#dynamicTable').hide();
						return;
					}

					// Base columns from response
					const columns = response.columns.map(col => ({
						title: col,
						data: col
					}));

					// Add Actions column
					columns.push({
						title: "Actions",
						data: null,
						orderable: false,
						render: function (data, type, row, meta) {
							return `
								<button class="btn btn-sm btn-primary me-1 edit-btn" data-id="${row.Id}">
									<i class="fa fa-edit"></i> Edit
								</button>
								<button class="btn btn-sm btn-danger delete-btn" data-id="${row.Id}">
									<i class="fa fa-trash"></i> Delete
								</button>
							`;
						}
					});

					// Initialize DataTable
					$('#dynamicTable').DataTable({
						data: response.rows,
						columns: columns,
						destroy: true,
						responsive: true,
						pageLength: 10
					});
				},
				error: function () {
					toastr.error('Failed to load submitted data.');
				}
			});
		});


		// $(document).ready(function () {
		// 	const tableName = '@Model.TableName';
		// 	$.ajax({
		// 		url: '/Home/GetFormData',
		// 		type: 'GET',
		// 		data: { tableName: tableName },
		// 		success: function (response) {
		// 			if (!response.columns || !response.rows) {
		// 				$('#dynamicTable').hide();
		// 				return;
		// 			}

		// 			// Construct columns array for DataTables
		// 			const columns = response.columns.map(col => ({ title: col, data: col }));

		// 			// Construct rows as array of objects
		// 			const data = response.rows;

		// 			// Initialize DataTable
		// 			$('#dynamicTable').DataTable({
		// 				data: data,
		// 				columns: columns,
		// 				destroy: true, // Allow re-initialization
		// 				responsive: true,
		// 				pageLength: 10,
		// 				render: function (data, type, row, meta) {
		// 					return `
		// 						<button class="btn btn-sm btn-primary me-1 edit-btn" data-id="${row.Id}">
		// 							<i class="fa fa-edit"></i> Edit
		// 						</button>
		// 						<button class="btn btn-sm btn-danger delete-btn" data-id="${row.Id}">
		// 							<i class="fa fa-trash"></i> Delete
		// 						</button>
		// 					`;
		// 				}
		// 			});
		// 		},
		// 		error: function () {
		// 			toastr.error('Failed to load submitted data.');
		// 		}
		// 	});
		// });



	</script>
}