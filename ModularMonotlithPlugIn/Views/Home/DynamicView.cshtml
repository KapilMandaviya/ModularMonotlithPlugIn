@using UserContract
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Mvc.Rendering
@model DynamicFormModel
@{
	ViewData["Title"] = "Dynamic Form";
}

<h2 class="text-center my-4">@Model.FormName</h2>

<form method="post" action="saveDynamicformData" class="needs-validation">
	<input type="hidden" name="FormName" value="@Model.FormName" />
	<input type="hidden" name="TableName" value="@Model.TableName" />
	<input type="hidden" name="FormId" value="@Model.Id" />
	<input type="hidden" name="Id" id="recordId" value="" />


	<div class="container">
		<div class="row">
			@foreach (var field in Model.Fields)
			{
				<div class="row mb-2">
					<div class="col-md-6">
						<div class="form-group">
							<label class="form-label fw-bold mb-0">@field.Label</label>

							@if (field.FieldType == "DropDown")
							{
								var json = TempData[$"Options_" + field.FieldName]?.ToString();
								var options = JsonConvert.DeserializeObject<List<SelectListItem>>(json ?? "[]");

								<select name="@field.FieldName" class="form-select" required="@(field.Required)">
									<option value="">-- Please select --</option>
									@foreach (var opt in options)
									{
										<option value="@opt.Value">@opt.Text</option>
									}
								</select>
							}
							else if (field.FieldType == "RadioButton")
							{
								var options = field.OptionsJson?.Split(',') ?? new string[0];
								foreach (var opt in options)
								{
									var trimmed = opt.Trim();
									var inputId = $"{field.FieldName}_{trimmed}";
									<div class="form-check">
										<input type="radio" value="@opt" name="@field.FieldName" class="form-check-input" required="@(field.Required)" id="@inputId" />
										<label class="form-check-label" for="@inputId">@trimmed</label>
									</div>
								}
							}
							else if (field.FieldType == "CheckBox")
							{
								var options = field.OptionsJson?.Split(',') ?? new string[0];
								foreach (var opt in options)
								{
									var trimmed = opt.Trim();
									var inputId = $"{field.FieldName}_{trimmed}";
									<div class="form-check">
										<input type="checkbox" value="@opt" name="@field.FieldName" class="form-check-input" required="@(field.Required)" id="@inputId" />
										<label class="form-check-label" for="@inputId">@trimmed</label>
									</div>
								}
							}
							else if (field.FieldType == "TextArea")
							{
								<textarea class="form-control" name="@field.FieldName" id="@field.FieldName" title="@field.Tooltip" rows="3" required="@(field.Required)"></textarea>
							}
							else if (field.FieldType == "DatePicker")
							{
								<input type="date" name="@field.FieldName" class="form-control" title="@field.Tooltip" required="@(field.Required)" />
							}
							else
							{
								if (field.Required)
								{
									<input type="@field.FieldType" name="@field.FieldName" class="form-control" title="@field.Tooltip" required/>
								}
								else
								{
									<input type="@field.FieldType" name="@field.FieldName" class="form-control" title="@field.Tooltip" />
										
								}
							}
						</div>
					</div>
				</div>
			}
		</div>

		<div class="row mt-4">
			<div class="col-md-6 d-flex gap-2">
				<button type="submit" class="btn btn-primary w-100">
					<i class="bi bi-send-fill me-1"></i> Submit
				</button>
				<button type="reset" class="btn btn-secondary w-100">
					<i class="bi bi-x-circle me-1"></i> Cancel
				</button>
			</div>
		</div>
	</div>
</form>
<h4 class="mt-5">@Model.FormName List</h4>
<table class="table table-bordered table-striped   nowrap" id="dynamicTable" style="width:100%">
	<thead></thead>
	<tbody></tbody>
</table>
@section Styles {
	<!-- DataTables Bootstrap 5 & Responsive CSS -->
	<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" />
	<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.5.0/css/responsive.bootstrap5.min.css" />
	<!-- Font Awesome (optional for icons) -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
}

@section Scripts {
	<script>
		$(function () {
		@if (TempData["ToastrSuccess"] != null)
		{
			<text>toastr.success("@TempData["ToastrSuccess"]");</text>
		}
		@if (TempData["ToastrError"] != null)
		{
			<text>toastr.error("@TempData["ToastrError"]");</text>
		}
		});

		 
		function loadTable() {
			const tableName = '@Model.TableName';

			$.ajax({
				url: '/Home/GetFormData',
				type: 'GET',
				data: { tableName: tableName },
				success: function (response) {
					if (!response.columns || !response.rows) {
						$('#dynamicTable').hide();
						return;
					}

					const columns = response.columns.map(col => ({ title: col, data: col }));
					columns.push({
						title: 'Actions',
						data: null,
						orderable: false,
						render: function (data, type, row) {
							return `
								<button class="btn btn-sm btn-primary me-1 edit-btn" data-id="${row.Id}">
									<i class="fa fa-edit"></i> Edit
								</button>
								<button class="btn btn-sm btn-danger delete-btn" data-id="${row.Id}" data-tablename="${tableName}">
									<i class="fa fa-trash"></i> Delete
								</button>`;
						}
					});

					$('#dynamicTable').DataTable({
						data: response.rows,
						columns: columns,
						destroy: true,
						responsive: true,
						pageLength: 10
					});
				},
				error: function () {
					toastr.error('Failed to load submitted data.');
				}
			});
		}

		$(document).ready(function () {
			loadTable();

			$('#dynamicTable').on('click', '.delete-btn', function () {
				const id = $(this).data('id');
				const tableName = $(this).data('tablename');

				if (confirm('Are you sure you want to delete this record?')) {
					$.ajax({
						url: '/Home/DeleteDynamicForm',
						type: 'POST',
						data: { id: id, tableName: tableName },
						success: function (response) {
							if (response.success) {
								toastr.success(response.message);
								loadTable(); // Reload table after delete
							} else {
								toastr.error(response.message);
							}
						},
						error: function () {
							toastr.error('Failed to delete record.');
						}
					});
				}
			});

		$('#dynamicTable').on('click', '.edit-btn', function () {
			const id = $(this).data('id');
			const tableName = '@Model.TableName';

			$.ajax({
				url: '/Home/GetFormDataRecord',  // Make sure your controller has this endpoint
				type: 'GET',
				data: { id: id, tableName: tableName },
				success: function (response) {
					console.log(response);
					if (response.success && response.data) {
						$('#recordId').val(response.data[0]?.formId || 0); // optional chaining, in case it's empty

						for (var i = 0; i < response.data.length; i++) {
				var field = response.data[i];
				var name = field.fieldName;
				var type = field.fieldType;
				var value = field.value;

					if (type === "DropDown") {
						$(`select[name="${name}"]`).val(value);
					}
					else if(type=="hidden")
					{
						$(`input[name="${name}"]`).val(value);
					}
					else if (type === "RadioButton") {
						$(`input[name="${name}"][value="${value}"]`).prop('checked', true);
					} else if (type === "CheckBox") {
						var vals = value ? value.split(',') : [];
						$(`input[name="${name}"]`).each(function () {
							$(this).prop('checked', vals.includes($(this).val()));
						});
					} else if (type === "TextArea") {
						$(`textarea[name="${name}"]`).val(value);
					} else if (type === "DatePicker") {
						$(`input[name="${name}"]`).val(value ? value.substring(0, 10) : '');
					} else {
						$(`input[name="${name}"]`).val(value);
					}
				}
						alert($('#recordId').val());
					}

					else {
						toastr.error('Failed to load data for editing.');
					}
				},
				error: function () {
					toastr.error('Error occurred while fetching data.');
				}
			});
		});


		}); 

	</script>
}